[{"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\index.js":"1","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\App.js":"2","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\reportWebVitals.js":"3","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Login\\Login.js":"4","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\Home.js":"5","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Nav\\Nav.jsx":"6","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Menu\\Menu.jsx":"7","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Products\\Products.jsx":"8","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\OrderList\\OrderList.jsx":"9","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Login\\components\\Input\\Input.jsx":"10","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Input\\Input.jsx":"11","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Label\\Label.jsx":"12","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Login\\components\\Label\\Label.jsx":"13","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\Routes.js":"14","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\controller\\products.js":"15","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\controller\\orders.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":175,"mtime":1610036775040,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":4658,"mtime":1610128373920,"results":"21","hashOfConfig":"18"},{"size":9395,"mtime":1610460969769,"results":"22","hashOfConfig":"18"},{"size":552,"mtime":1609975068888,"results":"23","hashOfConfig":"18"},{"size":555,"mtime":1610063948528,"results":"24","hashOfConfig":"18"},{"size":346,"mtime":1609964575437,"results":"25","hashOfConfig":"18"},{"size":610,"mtime":1609969860408,"results":"26","hashOfConfig":"18"},{"size":548,"mtime":1609972963628,"results":"27","hashOfConfig":"18"},{"size":534,"mtime":1610077648464,"results":"28","hashOfConfig":"18"},{"size":212,"mtime":1609971250849,"results":"29","hashOfConfig":"18"},{"size":242,"mtime":1609973024255,"results":"30","hashOfConfig":"18"},{"size":506,"mtime":1610143915575,"results":"31","hashOfConfig":"18"},{"size":255,"mtime":1610083130799,"results":"32","hashOfConfig":"18"},{"size":476,"mtime":1610138633597,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1pdfh1q",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\index.js",[],["70","71"],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\App.js",[],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\reportWebVitals.js",[],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Login\\Login.js",[],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\Home.js",["72","73","74"],"import React, { useCallback, useEffect, useState} from 'react';\r\nimport '../Home/Home.css';\r\nimport Label from './components/Label/Label';\r\nimport Input from './components/Input/Input';\r\nimport Nav from './components/Nav/Nav';\r\nimport Menu from './components/Menu/Menu';\r\nimport Products from './components/Products/Products';\r\nimport OrderList from './components/OrderList/OrderList';\r\nimport getAllProducts from '../../controller/products.js'\r\nimport {createOrder, allOrders} from '../../controller/orders.js';\r\n\r\n/* import Draggable, {DraggableCore} from 'react-draggable'; */\r\n\r\nconst Home = () => {\r\n\r\n    /* productData es un array que contiene objetos (cada producto), por eso se le puede hacer map */\r\n    const [orderArray, setOrderArray] = useState([]);\r\n    const [productData, setProductData] = useState([\"breakfast\"]);\r\n    const [client, setClient] = useState();\r\n    const [numberTable, setNumberTable] = useState();\r\n    const [waiter, setWaiter] = useState();\r\n\r\n    /* acá pasar el estado (objeto) como parámetro  */\r\n    const [allProducts, setAllProducts] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        getAllProducts()\r\n        .then(resp => {return setAllProducts(resp)})\r\n        .catch(err => console.log(err));\r\n    }, []);\r\n\r\n\r\n    let totalPrice = [0];\r\n\r\n    const filterProductsByType = useCallback((name) => {\r\n        const productsByType = allProducts.filter(el => el.type===name);\r\n        return setProductData(productsByType);\r\n    }, [allProducts]);\r\n\r\n    useEffect(()=>{\r\n        const time = new Date().getHours();\r\n        if (time < 15) {\r\n            filterProductsByType(\"breakfast\");\r\n        }\r\n        else {\r\n            filterProductsByType(\"lunch\");\r\n        }\r\n    }, [filterProductsByType])\r\n\r\n    const sendOrder = () => {\r\n    /* createOrder recibe null porque falta el id de usuario*/\r\n    /* if orderArray.lenght = 0 no se hace la peticion */\r\n    const products = orderArray.map(el=> {return ({ productId: el._id, qty: el.qty,})})\r\n    const body = {\r\n        userId: null,\r\n        client: client,\r\n        products: products\r\n    };\r\n        return createOrder(\"null\", body);\r\n    };\r\n    const handleInput = (name, value) => {\r\n        switch (name){\r\n            default: console.log(\"falta completar\");\r\n            break\r\n            case 'waiter': setWaiter(value);\r\n            break;\r\n            case 'client': setClient(value);\r\n            break;\r\n            case 'numberTable': setNumberTable(value);\r\n            break;\r\n        }\r\n    }\r\n\r\n    const handleProduct = (targetId, targetClassName) => {\r\n        const productId = parseInt(targetId);\r\n       \r\n        if (productId > 0){ \r\n            /* objeto con los datos del producto a ingresar */\r\n            const product = productData.find((el)=> {return el._id === productId;});   \r\n\r\n            switch (targetClassName) {\r\n                default:\r\n                    /* SE REPITE: \r\n                    nueva fx (\r\n                        params: product (objeto. el producto en específico, que ya lo buscamos x id), \r\n                            )\r\n                        product.qty++;\r\n                        product.total=0;\r\n                        setOrderArray\r\n                    Retorna: set producto    \r\n                     */\r\n                    if (orderArray.filter(el => el._id === productId).length > 0) {\r\n                        product.qty++;\r\n                        product.total=0;\r\n                        setOrderArray(prevState => [...prevState, product]);\r\n                        const orderList = [...new Set(orderArray)]; \r\n                        return setOrderArray(orderList);\r\n                    } else {\r\n                        product.qty = 1;\r\n                        product.total=0;\r\n                        return setOrderArray(prevState => [...prevState, product]);\r\n                    };                \r\n                case (\"plusOne\"): \r\n                        {console.log(\"me suman o ya existo\");\r\n                        product.qty++;\r\n                        product.total=0;\r\n                        setOrderArray(prevState => [...prevState, product]);\r\n                        const orderList = [...new Set(orderArray)]; \r\n                        return setOrderArray(orderList); }       \r\n                case (\"minusOne\"): \r\n                        {product.qty--;\r\n                        product.total=0;\r\n                        setOrderArray(prevState => [...prevState, product]);\r\n                        const orderList = [...new Set(orderArray)]; \r\n                        return setOrderArray(orderList);}\r\n                case (\"deleteProduct\"):\r\n                        const orderWithoutProduct = orderArray.filter(el => el._id !== productId);\r\n                        product.total=0;\r\n                        return setOrderArray(orderWithoutProduct);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (   \r\n        <div>\r\n            <Nav className=\"nav-bar\"/>\r\n            <div className=\"home-view\">\r\n                <section className=\"products-container\">\r\n                    <Menu\r\n                            text=\"DESAYUNOS\"\r\n                            id=\"breakfast\"\r\n                            name=\"breakfast\"\r\n                            filterProductsByType={filterProductsByType} />\r\n                    <Menu\r\n                            text=\"ALMUERZOS\"\r\n                            id='lunch'\r\n                            name='lunch'\r\n                            filterProductsByType={filterProductsByType} /> \r\n\r\n{/* Render list of products by type */}\r\n                    <div className=\"products-list\" /* onClick={ (e) => handleProduct(e.target.id) } */> \r\n                        {productData.map(product => {\r\n                            console.log(product._id)\r\n                            return <Products \r\n                                        key={product._id}\r\n                                        props={{\r\n                                            \"id\": product._id,\r\n                                            \"name\":product.name, \r\n                                            \"price\": product.price\r\n                                        }} \r\n                                        handleProduct={handleProduct}/>\r\n                        })}\r\n                    </div>\r\n                    \r\n                            \r\n                </section>\r\n\r\n{/* Orders section */}\r\n  \r\n                    <section className=\"order-container\"> \r\n                        <div className=\"order-info\">\r\n                            <div className=\"row\">\r\n                                <Label text=\"Mi orden\" />\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <Label text=\"Mesero:\" />\r\n                                <Input attribute={{\r\n                                    id: 'waiter',\r\n                                    name: 'waiter',\r\n                                    type: 'text',\r\n                                    placeholder: 'Mesero',\r\n                                }} \r\n                                handleInput={handleInput}/>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                                <Label text=\"Mesa:\" />\r\n                                <Input attribute={{\r\n                                    id: 'numberTable', \r\n                                    name: 'numberTable',\r\n                                    type: 'text',\r\n                                    placeholder: 'Mesa',\r\n                                }}\r\n                                handleInput={handleInput} />\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <Label text=\"Cliente:\" />\r\n                                <Input \r\n                                    attribute={{\r\n                                        id: 'client',\r\n                                        name: 'client',\r\n                                        type: 'text',\r\n                                        placeholder: 'Cliente',\r\n                                    }} \r\n                                    handleInput={handleInput}/>\r\n                            </div>\r\n        \r\n                        </div>\r\n{/* Render order */}\r\n                        <div className=\"order-produc ts\">\r\n                            <div onClick={ (e) => handleProduct(e.target.parentNode.id, e.target.className) }>\r\n                                {orderArray.map(el => { \r\n                                    el.total = el.price*el.qty;\r\n                                    totalPrice.push(el.total);\r\n                                    return <OrderList key={el._id} product={el} total={el.total} />})}\r\n                            </div>\r\n                            <Label className=\"order-total\" text={`Total: s/${totalPrice.reduce((a , b)=>{return a + b})}`}></Label>\r\n                            {/* <label>Total: {total.reduce((a , b)=>{return a + b})}</label> */}\r\n                            <button className=\"send-order\" onClick={sendOrder}> Enviar a cocina</button>\r\n                        </div>\r\n                    </section>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Nav\\Nav.jsx",[],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Menu\\Menu.jsx",[],["75","76"],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Products\\Products.jsx",[],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\OrderList\\OrderList.jsx",[],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Login\\components\\Input\\Input.jsx",[],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Input\\Input.jsx",[],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Label\\Label.jsx",[],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Login\\components\\Label\\Label.jsx",[],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\Routes.js",["77","78"],"import {React, useEffect, useState } from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Login from './pages/Login/Login.js';\r\nimport Home from './pages/Home/Home.js'\r\n\r\n\r\nconst Routes = () => {\r\n    \r\n\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/' component={Login}/>\r\n                <Route exact path='/home'> <Home></Home></Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes;","E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\controller\\products.js",[],"E:\\Mis Documentos\\Laboratoria\\Burguer Queen\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\controller\\orders.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":10,"column":22,"nodeType":"85","messageId":"86","endLine":10,"endColumn":31},{"ruleId":"83","severity":1,"message":"87","line":20,"column":12,"nodeType":"85","messageId":"86","endLine":20,"endColumn":23},{"ruleId":"83","severity":1,"message":"88","line":21,"column":12,"nodeType":"85","messageId":"86","endLine":21,"endColumn":18},{"ruleId":"79","replacedBy":"89"},{"ruleId":"81","replacedBy":"90"},{"ruleId":"83","severity":1,"message":"91","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"92","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":35},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'allOrders' is defined but never used.","Identifier","unusedVar","'numberTable' is assigned a value but never used.","'waiter' is assigned a value but never used.",["93"],["94"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]