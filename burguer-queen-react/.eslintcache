[{"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\index.js":"1","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\reportWebVitals.js":"2","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\App.js":"3","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\Home.js":"4","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Label\\Label.jsx":"5","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Input\\Input.jsx":"6","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Menu\\Menu.jsx":"7","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Products\\Products.jsx":"8","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\OrderList\\OrderList.jsx":"9","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Login\\Login.js":"10","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Login\\components\\Label\\Label.jsx":"11","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Login\\components\\Input\\Input.jsx":"12","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\controller\\products.js":"13","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\controller\\orders.js":"14","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\utils\\products.js":"15","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\router\\Router.js":"16","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\commons\\Nav\\Nav.jsx":"17","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\commons\\Card\\components\\Card.js":"18","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\ChefPending\\ChefPending.js":"19","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\utils\\dates.js":"20","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\ChefDelivering\\ChefDelivering.js":"21"},{"size":517,"mtime":1609947417211,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1608215368375,"results":"24","hashOfConfig":"23"},{"size":188,"mtime":1610731359885,"results":"25","hashOfConfig":"23"},{"size":9213,"mtime":1610863388888,"results":"26","hashOfConfig":"23"},{"size":237,"mtime":1610551443637,"results":"27","hashOfConfig":"23"},{"size":510,"mtime":1610551443634,"results":"28","hashOfConfig":"23"},{"size":618,"mtime":1610667009859,"results":"29","hashOfConfig":"23"},{"size":347,"mtime":1610864107540,"results":"30","hashOfConfig":"23"},{"size":616,"mtime":1610551443649,"results":"31","hashOfConfig":"23"},{"size":5509,"mtime":1610731810435,"results":"32","hashOfConfig":"23"},{"size":242,"mtime":1610382864981,"results":"33","hashOfConfig":"23"},{"size":548,"mtime":1610550667438,"results":"34","hashOfConfig":"23"},{"size":264,"mtime":1610667009850,"results":"35","hashOfConfig":"23"},{"size":698,"mtime":1610926657292,"results":"36","hashOfConfig":"23"},{"size":148,"mtime":1610551443688,"results":"37","hashOfConfig":"23"},{"size":771,"mtime":1610904073543,"results":"38","hashOfConfig":"23"},{"size":1810,"mtime":1610977330155,"results":"39","hashOfConfig":"23"},{"size":945,"mtime":1610977998855,"results":"40","hashOfConfig":"23"},{"size":7838,"mtime":1610978416734,"results":"41","hashOfConfig":"23"},{"size":1048,"mtime":1610855911873,"results":"42","hashOfConfig":"23"},{"size":1864,"mtime":1610977242510,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1hqgnjc",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\index.js",[],["88","89"],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\reportWebVitals.js",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\App.js",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\Home.js",["90","91"],"import React, { useCallback, useEffect, useState} from 'react';\r\nimport '../Home/Home.css';\r\nimport Label from './components/Label/Label';\r\nimport Input from './components/Input/Input';\r\nimport Nav from '../commons/Nav/Nav';\r\nimport Menu from './components/Menu/Menu';\r\nimport Products from './components/Products/Products';\r\nimport OrderList from './components/OrderList/OrderList';\r\nimport getAllProducts from '../../controller/products.js'\r\nimport { createOrder } from '../../controller/orders.js';\r\nimport deleteProduct from '../../utils/products';\r\n/* import Draggable, {DraggableCore} from 'react-draggable'; */\r\n\r\nconst Home = () => {\r\n\r\n    /* productData es un array que contiene objetos (cada producto), por eso se le puede hacer map */\r\n    const [orderArray, setOrderArray] = useState([]);\r\n    const [productData, setProductData] = useState([\"breakfast\"]);\r\n    const [client, setClient] = useState();\r\n    const [numberTable, setNumberTable] = useState();\r\n    \r\n    /* acá pasar el estado (objeto) como parámetro  */\r\n    const [allProducts, setAllProducts] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        getAllProducts()\r\n        .then(resp => {return setAllProducts(resp)})\r\n        .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    let totalPrice = [0];\r\n    \r\n    const filterProductsByType = useCallback((name) => {\r\n        //console.log('allProducts', allProducts);\r\n        const productsByType = allProducts.filter(el => el.type===name);\r\n        return setProductData(productsByType);\r\n    }, [allProducts]);\r\n\r\n    useEffect(()=>{\r\n        const time = new Date().getHours();\r\n        if (time < 15) {\r\n            filterProductsByType(\"breakfast\");\r\n        }\r\n        else {\r\n            filterProductsByType(\"lunch\");\r\n        }\r\n    }, [filterProductsByType]);\r\n\r\n    const sendOrder = () => {\r\n    /* createOrder recibe null porque falta el id de usuario*/\r\n    /* if orderArray.lenght = 0 no se hace la peticion */\r\n    const products = orderArray.map(el=> {return ({ productId: el._id, qty: el.qty,})})\r\n    const body = {\r\n        userId: null,\r\n        client: client,\r\n        products: products\r\n    };\r\n        return createOrder(\"null\", body);\r\n    };\r\n    const handleInput = (name, value) => {\r\n        switch (name){\r\n            default: console.log(\"falta completar\");\r\n            break;\r\n            case 'client': setClient(value);\r\n            break;\r\n            case 'numberTable': setNumberTable(value);\r\n            break;\r\n        }\r\n    }\r\n\r\n    const handleProduct = (targetId, targetClassName) => {\r\n        const productId = parseInt(targetId);\r\n       \r\n        if (productId > 0){ \r\n            /* objeto con los datos del producto a ingresar */\r\n            const product = productData.find((el)=> {return el._id === productId;});   \r\n            \r\n            \r\n            switch (targetClassName) {\r\n                default:\r\n                    /* SE REPITE: \r\n                    nueva fx (\r\n                        params: product (objeto. el producto en específico, que ya lo buscamos x id), \r\n                            )\r\n                        product.qty++;\r\n                        product.total=0;\r\n                        setOrderArray\r\n                    Retorna: set producto    \r\n                     */\r\n                    if (orderArray.filter(el => el._id === productId).length > 0) {\r\n                        product.qty++;\r\n                        product.total=0;\r\n                        setOrderArray(prevState => [...prevState, product]);\r\n                        const orderList = [...new Set(orderArray)]; \r\n                        return setOrderArray(orderList);\r\n                    } else {\r\n                        product.qty = 1;\r\n                        product.total=0;\r\n                        return setOrderArray(prevState => [...prevState, product]);\r\n                    };                \r\n                case (\"plusOne\"): \r\n                        {console.log(\"me suman o ya existo\");\r\n                        product.qty++;\r\n                        product.total=0;\r\n                        setOrderArray(prevState => [...prevState, product]);\r\n                        const orderList = [...new Set(orderArray)]; \r\n                        return setOrderArray(orderList); }       \r\n                case (\"minusOne\"): \r\n                    {\r\n                        product.qty--;\r\n                        product.total = 0;\r\n                        if(product.qty > 0){\r\n                            setOrderArray(prevState => [...prevState, product]);\r\n                            const orderList = [...new Set(orderArray)]; \r\n                            return setOrderArray(orderList)\r\n                        }else{\r\n                            alert('No puede ser negativo...');\r\n                            product.qty = 0;\r\n                            //return setOrderArray(orderList)\r\n                        }\r\n                    }\r\n                case (\"deleteProduct\"):\r\n                        return setOrderArray(deleteProduct(orderArray, productId));\r\n            }\r\n        }\r\n    }\r\n\r\n    return (   \r\n        <div>\r\n            <Nav className=\"nav-bar\"/>\r\n            <div className=\"home-view\">\r\n                <section className=\"products-container\">\r\n                    <Menu\r\n                            text=\"DESAYUNOS\"\r\n                            id=\"breakfast\"\r\n                            name=\"breakfast\"\r\n                            filterProductsByType={filterProductsByType}\r\n                            paramIcon=\"fas fa-coffee\" />\r\n                    <Menu\r\n                            text=\"ALMUERZOS\"\r\n                            id='lunch'\r\n                            name='lunch'\r\n                            filterProductsByType={filterProductsByType}\r\n                            paramIcon=\"fas fa-hamburger\"/> \r\n\r\n{/* Render list of products by type */}\r\n                    <div className=\"products-list\" /* onClick={ (e) => handleProduct(e.target.id) } */> \r\n                        {productData.map(product => {\r\n                            //console.log(\"render\")\r\n                            return <Products \r\n                                        key={product._id}\r\n                                        props={{\r\n                                            \"id\": product._id,\r\n                                            \"name\":product.name, \r\n                                            \"price\": product.price\r\n                                        }} \r\n                                        handleProduct={handleProduct}/>\r\n                        })}\r\n                    </div>\r\n                    \r\n                            \r\n                </section>\r\n\r\n{/* Orders section */}\r\n  \r\n                    <section className=\"order-container\"> \r\n                        <div className=\"order-info\">\r\n                            <div className=\"row\">\r\n                                <Label text=\"Mi orden\" />\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                                <Label text=\"Mesa:\" />\r\n                                <Input attribute={{\r\n                                    id: 'numberTable', \r\n                                    name: 'numberTable',\r\n                                    type: 'text',\r\n                                    placeholder: 'Mesa',\r\n                                }}\r\n                                handleInput={handleInput} />\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <Label text=\"Cliente:\" />\r\n                                <Input \r\n                                    attribute={{\r\n                                        id: 'client',\r\n                                        name: 'client',\r\n                                        type: 'text',\r\n                                        placeholder: 'Cliente',\r\n                                    }} \r\n                                    handleInput={handleInput}/>\r\n                            </div>\r\n        \r\n                        </div>\r\n{/* Render order */}\r\n                        <div className=\"order-products\">\r\n                            <div onClick={ (e) => handleProduct(e.target.parentNode.id, e.target.className) }>\r\n                                {orderArray.map(el => { \r\n                                    el.total = el.price*el.qty;\r\n                                    totalPrice.push(el.total);\r\n                                    return <OrderList key={el._id} product={el} total={el.total} />})}\r\n                            </div>\r\n                            <Label className=\"order-total\" text={`Total: s/${totalPrice.reduce((a , b)=>{return a + b})}`}></Label>\r\n                            {/* <label>Total: {total.reduce((a , b)=>{return a + b})}</label> */}\r\n                            <button className=\"send-order\" onClick={sendOrder}> Enviar a cocina</button>\r\n                        </div>\r\n                    </section>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Label\\Label.jsx",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Input\\Input.jsx",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Menu\\Menu.jsx",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\Products\\Products.jsx",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Home\\components\\OrderList\\OrderList.jsx",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Login\\Login.js",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Login\\components\\Label\\Label.jsx",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\Login\\components\\Input\\Input.jsx",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\controller\\products.js",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\controller\\orders.js",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\utils\\products.js",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\router\\Router.js",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\commons\\Nav\\Nav.jsx",["92","93"],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\commons\\Card\\components\\Card.js",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\ChefPending\\ChefPending.js",["94"],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\utils\\dates.js",[],"C:\\laboratoria\\LIM013-fe-burger-queen-api-client\\burguer-queen-react\\src\\pages\\ChefDelivering\\ChefDelivering.js",["95","96","97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":20,"column":12,"nodeType":"105","messageId":"106","endLine":20,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":122,"column":17,"nodeType":"109","messageId":"110","endLine":123,"endColumn":84},{"ruleId":"111","severity":1,"message":"112","line":11,"column":5,"nodeType":"113","messageId":"114","endLine":25,"endColumn":6},{"ruleId":"115","severity":1,"message":"116","line":18,"column":26,"nodeType":"117","messageId":"118","endLine":22,"endColumn":10},{"ruleId":"119","severity":1,"message":"120","line":191,"column":72,"nodeType":"121","messageId":"122","endLine":191,"endColumn":74},{"ruleId":"103","severity":1,"message":"123","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":21},{"ruleId":"103","severity":1,"message":"124","line":10,"column":7,"nodeType":"105","messageId":"106","endLine":10,"endColumn":16},{"ruleId":"103","severity":1,"message":"125","line":11,"column":7,"nodeType":"105","messageId":"106","endLine":11,"endColumn":20},{"ruleId":"119","severity":1,"message":"120","line":33,"column":74,"nodeType":"121","messageId":"122","endLine":33,"endColumn":76},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'numberTable' is assigned a value but never used.","Identifier","unusedVar","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'calculateDate' is defined but never used.","'dateEntry' is assigned a value but never used.","'dateProcessed' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]